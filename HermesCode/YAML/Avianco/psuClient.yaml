---
openapi: 3.0.3
# swagger: '2.0'
info:
  version: 1.0.0
  title: Avianco SkyNet PSU Client API (PSU Client -> PSU)
  description: Interface definitions between PSU Client/Operator System and Avianco SkyNet (PSU)
  
servers:
  - url: https://app.avianco.io:2002/psu_client/v1
  
tags:
  - name: PSU Client
  
paths:
  /operational_intent_references/{entityid}:
    summary: Create the specified operational intent in PSU.
    parameters:
    - name: entityid
      description: EntityID of the operational intent.
      schema:
        $ref: '#/components/schemas/EntityID'
      in: path
      required: true

    put:
      
      description: Create the specified operational intent in PSU.
      summary: Create the specified operational intent in PSU. This API is used for creating Operation in Draft state. When in Draft, Operation is not submitted to DSS.
             It is saved to PSU internal database only.
      parameters:
        - name: x-api-key
          in: header
          schema:
            $ref: '#/components/schemas/apiKey'
        - name: x-access-token
          in: header    
          schema:
            $ref: '#/components/schemas/accessToken'
      tags:
        - PSU Client
      
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutOperationalIntentReferenceParameters'
        required: true
        
      responses:
        '200':
          description: OK
          content:
              application/json:
                schema:
                   $ref:  '#/components/schemas/OperationalIntentReferenceResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: One or more input parameters were missing or invalid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: access token was not provided in Authorization header,
            token could not be decoded, or token was invalid.        
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The client issued too many requests in a short period of time
          
        '505':
          description: unexpected error
          content:
            application/json:
              schema:
                $ref:  '#/components/schemas/Error'
  /operational_intent_references/{entityid}/{ovn}:
    summary: Create the specified operational intent in the PSU.
    parameters:
    - name: entityid
      description: EntityID of the operational intent.
      schema:
        $ref: '#/components/schemas/EntityID'
      in: path
      required: true
    - name: ovn
      description: Current ovn of the operational intent.
      schema:
        $ref: '#/components/schemas/EntityOVN'
      in: path
      required: true

    put:
      
      description: Update the specified operational intent.
      summary: Update the specified operational intent. This API is used for updating Operation status (Draft, Accept, Activate, End).
               Calling update with Draft state again on already in 'Draft' state operation will update Operation with specified information.

      parameters:
        - name: x-api-key
          in: header
          schema:
            $ref: '#/components/schemas/apiKey'
        - name: x-access-token
          in: header    
          schema:
            $ref: '#/components/schemas/accessToken'
      tags:
        - PSU Client
      
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutOperationalIntentReferenceParameters'
        required: true
        
      responses:
        '200':
          description: OK
          content:
              application/json:
                schema:
                   $ref:  '#/components/schemas/UpdateOperationalIntentReferenceResponse'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: One or more input parameters were missing or invalid.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: access token was not provided in Authorization header,
            token could not be decoded, or token was invalid.        
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The client issued too many requests in a short period of time
          
        '505':
          description: unexpected error
          content:
            application/json:
              schema:
                $ref:  '#/components/schemas/Error'
  
components:
  schemas:
    apiKey:
      required:
        - x-api-key
      properties:
        x-api-key:
          type: string
      example:
        XXXXXXX-ZZZZZZZ-ZZZZZZZ-XXXXXXX
    accessToken:
      required:
        - x-access-token
      properties:
        x-access-token:
          type: string
      example:
        eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NDc1Mjg1NTgsImV4cCI6MTY0NzYxNDk1OH0.PGa4KUL15tuUBdUM__BUPNFMQOhAvOhIYdCy6_Qes6A
    PutOperationalIntentReferenceParameters:
      description: |-
        Parameters for a request to create/update an OperationalIntentReference in the DSS by PSU.        
      required:
        #- extents
        - volume
        - aircraft_registration
        - operator_name
        - trajectory
        - time_start
        - time_end
        - adaptation_id
        - state
        - purpose
      type: object
      properties:
        #extents:
          #description: |-
            #Spacetime extents that bound this operational intent.
            #Start and end times, as well as lower and upper altitudes, are required for each
            #volume. The end time may not be in the past. All volumes, both nominal and off-nominal,
            #must be encompassed in these extents. However, these extents do not need to match the
            #precise volumes of the operational intent; a single bounding extent may be provided
            #instead, for instance.
          #type: array
          #items:
            #$ref: '#/components/schemas/Volume4D'
          #minItems: 1
        volume:
          $ref: '#/components/schemas/Volume3D'         
        aircraft_registration:
          description: |-
            aircraft registration number. For example, UAM101. PSU Client must have a aircraft registered in their profile in SkyNet database.
          pattern: "[A-Z0-9]{1,7}"
          type: string  
          minLength: 1
          maxLength: 7
        operator_name:
          description: operator name
          type: string
          pattern: "[A-Z]{3}"   
        trajectory:
          type: array
          minItems: 2
          maxItems: 1000
          description: |-
            The list of TrajectoryPoints for this operation.  This list must contain
            all significant TrajectoryPoints. For additional insight on 
            points to be included, see the enumeration of property types in the 
            TrajectoryPoint4D model.
          items:
            $ref: '#/components/schemas/TrajectoryPoint4D'
        time_start:
          description: Beginning time of this volume. Must be before time_end.
          anyOf:
            - $ref: '#/components/schemas/Time'
        time_end:
          description: End time of this volume. Must be after time_start.
          anyOf:
            - $ref: '#/components/schemas/Time'
        adaptation_id:
          description: ASDS adaptation id. Provide ASDS adaptation used to create the Operation Intent.
          type: string  
        state:
          description: operation state
          type: string
          enum:
            - Draft
            - Accept
            - Activate
            - End
        purpose:
          description: operation purpose
          type: string  
    OperationalIntentReferenceResponse:
      description: |-
        Response to a request to create an OperationalIntentReference
        in the Skynet.     
      required:
        - id
        - version
        - aircraft_registration
        - operator_name
        - trajectory
        - time_start
        - time_end
        - adaptation_id
        - state
        - subscription_id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EntityID'
        version:
          type: integer
          format: int32
          example: 1
          description: |-
            Numeric version of this operational intent which increments upon each change in the operational intent,
            regardless of whether any field of the operational intent reference changes.  A USS with the
            details of this operational intent when it was at a particular version does not need to retrieve
            the details again until the version changes.
        ovn:
          description: |-
            Opaque version number of this operational intent.  Populated only when the OperationalIntentReference
            is managed by the USS retrieving or providing it.
          anyOf:
            - $ref: '#/components/schemas/EntityOVN'
        aircraft_registration:
            description: |-
              aircraft registration number. For example, UAM101. PSU Client must have a aircraft registered in their profile in SkyNet database.
            pattern: "[A-Z0-9]{1,7}"
            type: string  
            minLength: 1
            maxLength: 7
        operator_name:
          description: operator name
          type: string
          pattern: "[A-Z]{3}"   
        trajectory:
          type: array
          minItems: 2
          maxItems: 1000
          description: |-
            The list of TrajectoryPoints for this operation.  This list must contain
            all significant TrajectoryPoints per the CBRs. For additional insight on 
            points to be included, see the enumeration of property types in the 
            TrajectoryPoint4D model.
          items:
            $ref: '#/components/schemas/TrajectoryPoint4D'
        time_start:
          description: Beginning time of this volume. Must be before time_end.
          anyOf:
            - $ref: '#/components/schemas/Time'
        time_end:
          description: End time of this volume. Must be after time_start.
          anyOf:
            - $ref: '#/components/schemas/Time'
        adaptation_id:
          description: adaptation id
          type: string  
        state:
          description: operation state
          type: string
          enum:
            - Draft
            - Accept
            - Activate
            - End
        subscription_id:
          description: operation subscription id
          type: string 
    UpdateOperationalIntentReferenceResponse:
      description: |-
        Response to a request to  update, or delete an OperationalIntentReference
        in the Skynet and DSS.      
      required:
        - id
        - version
        - aircraft_registration
        - operator_name
        - trajectory
        - time_start
        - time_end
        - adaptation_id
        - state
        - subscription_id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EntityID'
        version:
          type: integer
          format: int32
          example: 1
          description: |-
            Numeric version of this operational intent which increments upon each change in the operational intent,
            regardless of whether any field of the operational intent reference changes.  A USS with the
            details of this operational intent when it was at a particular version does not need to retrieve
            the details again until the version changes.
        ovn:
          description: |-
            Opaque version number of this operational intent.  Populated only when the OperationalIntentReference
            is managed by the USS retrieving or providing it.
          anyOf:
            - $ref: '#/components/schemas/EntityOVN'
        aircraft_registration:
          description: |-
            aircraft registration number. For example, UAM101. PSU Client must have a aircraft registered in their profile in SkyNet database.
          pattern: "[A-Z0-9]{1,7}"
          type: string  
          minLength: 1
          maxLength: 7
        operator_name:
          description: operator name
          type: string
          pattern: "[A-Z]{3}"  
        trajectory:
          type: array
          minItems: 2
          maxItems: 1000
          description: |-
            The list of TrajectoryPoints for this operation.  This list must contain
            all significant TrajectoryPoints per the CBRs. For additional insight on 
            points to be included, see the enumeration of property types in the 
            TrajectoryPoint4D model.
          items:
            $ref: '#/components/schemas/ResponseTrajectoryPoint4D'
        time_start:
          description: Beginning time of this volume. Must be before time_end.
          anyOf:
            - $ref: '#/components/schemas/Time'
        time_end:
          description: End time of this volume. Must be after time_start.
          anyOf:
            - $ref: '#/components/schemas/Time'
        adaptation_id:
          description: adaptation id
          type: string  
        state:
          description: operation state
          type: string
          enum:
            - Draft
            - Accept
            - Activate
            - End
        subscription_id:
          description: operation subscription id
          type: string  

    EntityID:
      description: |-
        Identifier for an Entity communicated through the DSS.  Formatted as
        a UUIDv4.
      anyOf:
        - $ref: '#/components/schemas/UUIDv4Format'
      example: 2f8343be-6482-4d1b-a474-16847e01af1e
    UUIDv4Format:
      description: |-
        String whose format matches a version-4 UUID according to RFC 4122.
      maxLength: 36
      minLength: 36
      type: string
      format: uuid
      pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[8-b][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$'
      # pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$'
      example: 03e5572a-f733-49af-bc14-8a18bd53ee39
    EntityOVN:
      title: EntityOVN
      description: |-
        A token associated with a particular UTM Entity+version created
        by the DSS upon creation or modification of an Entity reference and provided
        to the client creating or modifying the Entity reference.  The EntityOVN
        is stored privately by the DSS and then compared against entries in a Key
        provided to mutate the airspace.  The EntityOVN is also provided by
        the client whenever that client transmits the full information of the Entity.
      type: string
      minLength: 16
      maxLength: 128
      example: 9d158f59-80b7-4c11-9c0c-8a2b4d936b2d
    Time:
      required:
        - value
        - format
      type: object
      properties:
        value:
          type: string
          description: RFC3339-formatted time/date string.  The time zone must be
            'Z'.
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        format:
          type: string
          enum:
            - RFC3339
    Altitude:
      type: object
      required:
        - value
        - reference
        - units
      properties:
        value:
          description: |-
            The numeric value of the altitude. Note that min and max values are
            added as a sanity check. As use cases evolve and more options are
            made available in terms of units of measure or reference systems,
            these bounds may be re-evaluated.
          type: number
          format: double
          minimum: -8000
          exclusiveMinimum: false
          maximum: 100000
          exclusiveMaximum: false
        reference:
          description: |-
            A code indicating the reference for a vertical distance. See AIXM 5.1
            and FIXM 4.2.0. Currently, UTM only allows WGS84 with no immediate
            plans to allow other options. FIXM and AIXM allow for 'SFC' which is
            equivalent to AGL.
          type: string
          enum:
            - W84
        units:
          description: |-
            The reference quantities used to express the value of altitude. See
            FIXM 4.2. Currently, UTM only allows meters with no immediate plans
            to allow other options.
          type: string
          enum:
            - M
 
    Latitude:
      description: Degrees of latitude north of the equator, with reference to the
        WGS84 ellipsoid.
      maximum: 90
      exclusiveMaximum: false
      minimum: -90
      exclusiveMinimum: false
      type: number
      format: double
      example: 34.123
 
    Longitude:
      description: Degrees of longitude east of the Prime Meridian, with reference
        to the WGS84 ellipsoid.
      minimum: -180
      exclusiveMaximum: false
      maximum: 180
      exclusiveMinimum: false
      type: number
      format: double
      example: -118.456
 
    Polygon:
      description: |-
        An enclosed area on the earth.
        The bounding edges of this polygon are defined to be the shortest paths between connected vertices.  This means, for instance, that the edge between two points both defined at a particular latitude is not generally contained at that latitude.
        The winding order must be interpreted as the order which produces the smaller area.
        The path between two vertices is defined to be the shortest possible path between those vertices.
        Edges may not cross.
        Vertices may not be duplicated.  In particular, the final polygon vertex must not be identical to the first vertex.
      required:
        - vertices
      type: object
      properties:
        vertices:
          minItems: 3
          type: array
          items:
            $ref: '#/components/schemas/LatLngPoint'
 
    LatLngPoint:
      description: Point on the earth's surface.
      required:
        - lat
        - lng
      type: object
      properties:
        lng:
          $ref: '#/components/schemas/Longitude'
        lat:
          $ref: '#/components/schemas/Latitude' 
 
    Volume3D:
      description: |-
        A three-dimensional geographic volume consisting of a vertically-extruded shape.
        Exactly one outline must be specified.
      type: object
      properties:
        #outline_circle:
          #anyOf:
            #- $ref: '#/components/schemas/Circle'
          #description: A circular geographic shape on the surface of the earth.
        outline_polygon:
          anyOf:
            - $ref: '#/components/schemas/Polygon'
          description: A polygonal geographic shape on the surface of the earth.
        altitude_lower:
          description: Minimum bounding altitude of this volume. Must be less than
            altitude_upper, if specified.
          anyOf:
            - $ref: '#/components/schemas/Altitude'
        altitude_upper:
          description: Maximum bounding altitude of this volume. Must be greater than
            altitude_lower, if specified.
          anyOf:
            - $ref: '#/components/schemas/Altitude'
    TrajectoryPoint4D:
      description: |
        A point for use within a planned trajectory.
        Tolerance around the point is standardized, and will be applicable
        to all operations in a given area.
 
        Currently Flight Rule is not expected to change during an operation. If it does, the
        following may be added as a new property:
          https://fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_RouteTrajectoryElementType.html#Link2A3
      required:
        - point_designator_uuid
        - point_type
        - speed_type
        - lat_lng_point
        - altitude
        - time
        - speed
        - trajectory_property_array
      type: object
      properties:
        point_designator_uuid:
          description: UAM registration number
          anyOf:
            - $ref: '#/components/schemas/EntityID'          
        point_designator:
          description: The name of the designated point.
            This is required for all named airspace structure point from ASDS, including vertipads.
          type: string
          example: ee123
        point_type:
          description: Type of the point.
          type: string
          enum:
            - Vertiport
            - Track
            - Navigational
            - Final
            - Transition
            - Non_ASDS
        speed_type:
          description: Type of the speed.
          type: string
          enum:
            - Vertiport
            - Enroute
            - Final
            - Transition
            - Non_ASDS

        lat_lng_point:
          description: Latitude and Longitude of the point. If this is for a named airspace structure 
            point from ASDS, it should be the same value as from ASDS.
          anyOf:
            - $ref: '#/components/schemas/LatLngPoint'
        altitude:
          description: Altitude of the point. If this is for a named airspace structure 
            point from ASDS, it should be the same value as from ASDS.
          anyOf:
            - $ref: '#/components/schemas/Altitude'  
        time:
          description: Estimated time when the vehicle will be at the location of the TrajectoryPoint
          anyOf:
            - $ref: '#/components/schemas/Time'
        speed:
          description: |-
            Speed of the vehicle at this TrajectoryPoint.
            FIXM allows for two speed entries:  predictedAirspeed and predictedGroundspeed
          anyOf:
            - $ref: '#/components/schemas/Velocity'
        trajectory_property_array:
          description: |-
            Describes any applicable properties of the trajectory point.
            May include multiple properties per point. FIXM allows up to 2000 properties per
            trajectory point. For X4 we are allowing up to 4.
            The first point of initial plan must include at a minimum: AIRPORT_REFERENCE_LOCATION, WHEELS_OFF
            The last point must include at a minimum: AIRPORT_REFERENCE_LOCATION, WHEELS_ON
            A named airspace structure point from ASDS must include at a minimum: WAYPOINT
            If the airspace structure point has a SchedulingType, it must be included as follows:
              SchedulingType enum   |   Property enum
              Entry                 |   ENTRY_CORRIDOR
              Exit                  |   EXIT_CORRIDOR
              Crossing              |   CROSSING_TRACK
              Merge                 |   MERGE_TRACK
          type: array
          minItems: 1
          maxItems: 4
          items:
            $ref: '#/components/schemas/TrajectoryProperty'
          externalDocs:
            url: https://fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_TrajectoryPoint4DType.html#Link2AC                   
      externalDocs:
        description: See FIXM 4.2.0 for further information.
        url: https://www.fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_TrajectoryPoint4DType.html#Link116     
    ResponseTrajectoryPoint4D:
          description: |
            A point for use within a planned trajectory.
            Tolerance around the point is standardized, and will be applicable
            to all operations in a given area.
    
            Currently Flight Rule is not expected to change during an operation. If it does, the
            following may be added as a new property:
              https://fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_RouteTrajectoryElementType.html#Link2A3
          required:
            - lat_lng_point
            - altitude
            - time
            - speed
            - trajectory_property_array
          type: object
          properties:         
            point_designator:
              description: The name of the designated point.
                This is required for all named airspace structure point from ASDS, including vertipads.
              type: string
              example: ee123
            lat_lng_point:
              description: Latitude and Longitude of the point. If this is for a named airspace structure 
                point from ASDS, it should be the same value as from ASDS.
              anyOf:
                - $ref: '#/components/schemas/LatLngPoint'
            altitude:
              description: Altitude of the point. If this is for a named airspace structure 
                point from ASDS, it should be the same value as from ASDS.
              anyOf:
                - $ref: '#/components/schemas/Altitude'  
            time:
              description: Estimated time when the vehicle will be at the location of the TrajectoryPoint
              anyOf:
                - $ref: '#/components/schemas/Time'
            speed:
              description: |-
                Speed of the vehicle at this TrajectoryPoint.
                FIXM allows for two speed entries:  predictedAirspeed and predictedGroundspeed
              anyOf:
                - $ref: '#/components/schemas/Velocity'
            trajectory_property_array:
              description: |-
                Describes any applicable properties of the trajectory point.
                May include multiple properties per point. FIXM allows up to 2000 properties per
                trajectory point. For X4 we are allowing up to 4.
                The first point of initial plan must include at a minimum: AIRPORT_REFERENCE_LOCATION, WHEELS_OFF
                The last point must include at a minimum: AIRPORT_REFERENCE_LOCATION, WHEELS_ON
                A named airspace structure point from ASDS must include at a minimum: WAYPOINT
                If the airspace structure point has a SchedulingType, it must be included as follows:
                  SchedulingType enum   |   Property enum
                  Entry                 |   ENTRY_CORRIDOR
                  Exit                  |   EXIT_CORRIDOR
                  Crossing              |   CROSSING_TRACK
                  Merge                 |   MERGE_TRACK
              type: array
              minItems: 1
              maxItems: 4
              items:
                $ref: '#/components/schemas/TrajectoryProperty'
              externalDocs:
                url: https://fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_TrajectoryPoint4DType.html#Link2AC                   
          externalDocs:
            description: See FIXM 4.2.0 for further information.
            url: https://www.fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_TrajectoryPoint4DType.html#Link116     
    
    TrajectoryProperty:
      description: Describes any applicable properties of the trajectory point.
      type: object
      required:
        - property_type
      properties:
        property_type:
          description: |
            Provides the type of trajectory point property. Enum list is based on the FIXM definition
            of TrajectoryPointPropertyType.
          type: string
          enum:
            - TOP_OF_CLIMB
            - TOP_OF_DESCENT
            - TCP_VERTICAL
            - TCP_SPEED
            - TCP_LATERAL
            - WHEELS_OFF
            - WHEELS_ON
            - AIRPORT_REFERENCE_LOCATION
            - WAYPOINT
            - ENTRY_CORRIDOR
            - EXIT_CORRIDOR
            - CROSSING_TRACK
            - MERGE_TRACK
          externalDocs:
            description: FIXM definition of TrajectoryPointPropertyType
            url: https://fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_TrajectoryPointPropertyType.html#Link2B0

    Velocity:
      description: |-
        Velocity of the associated vehicle at the time_measured.
      required:
        - speed
        - units_speed
      type: object
      properties:
        speed:
          format: float
          type: number
          description: |-
            Speed numerical value. Currently PSU Client must provide speed in MetersPerSecond only.
          example: 200.1
        units_speed:
          type: string
          enum:
            - MetersPerSecond
            - Knots
        track:
          format: float
          type: number
          description: |-
            Direction of flight expressed as a "True North-based" ground track angle.
            This value is provided in degrees East of North with a minimum resolution of 1 degree.
            A value of 360 indicates invalid, no value, or unknown.
          example: 120
          default: 0
        speed_type:
          description: |-
            Air speed or ground speed
          type: string
          enum:
            - GROUND
            - AIR
          default: GROUND

            
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    ErrorResponse:
      description: |-
        Human-readable string returned when an error occurs
        as a result of a USS - DSS transaction.
      type: object
      properties:
        message:
          description: |-
            Human-readable message indicating what error occurred and/or why.
          type: string
          example: The error occurred because [...]